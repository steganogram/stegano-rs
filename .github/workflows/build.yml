name: Build
on:
  push:
    branches: ["*"]
    paths-ignore:
      - "**/docs/**"
      - "**.md"
  pull_request:
    branches: [main]
    paths-ignore:
      - "**/docs/**"
      - "**.md"
  workflow_call:
    secrets:
      CODECOV_TOKEN:
        required: true

jobs:
  lint:
    name: lint
    strategy:
      fail-fast: false
      matrix:
        version: ["ubuntu-latest"]
        cargo-cmd:
          - fmt --all -- --check
          - lint
    runs-on: ${{ matrix.version }}
    steps:
      - uses: actions/checkout@v4
      - name: setup | rust
        uses: dtolnay/rust-toolchain@stable
      - run: cargo ${{ matrix['cargo-cmd'] }}

  tests:
    name: test
    strategy:
      fail-fast: false
      matrix:
        version: ["macos-latest", "ubuntu-latest", "windows-latest"]
        rust: [nightly, stable]
    runs-on: ${{ matrix.version }}
    continue-on-error: ${{ matrix.rust == 'nightly' }}
    steps:
      - uses: actions/checkout@v4
      - name: setup | rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
      - name: cargo test
        run: cargo test --all --locked

  coverage:
    name: coverage report
    strategy:
      fail-fast: false
      matrix:
        version: ["ubuntu-latest"]
    runs-on: ${{ matrix.version }}
    steps:
      - uses: actions/checkout@v4
      - name: setup | rust
        uses: dtolnay/rust-toolchain@stable
      - uses: cargo-bins/cargo-binstall@main
      - run: cargo binstall -y cargo-llvm-cov
      - run: cargo coverage
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v4
        with:
          file: codecov.json
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: codecov.json

  benchmark:
    name: benchmark
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: setup | rust
        uses: dtolnay/rust-toolchain@nightly
      - name: run benchmarks
        run: cargo +nightly benchmarks

  # pkg-deb:
  #   name: binaray package .deb
  #   needs: check
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: cargo deb
  #       uses: sassman/rust-deb-builder@v1
  #       with:
  #         package: stegano-cli
  #     - name: Archive deb artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: stegano-cli-amd64-static.deb
  #         path: target/x86_64-unknown-linux-musl/debian/stegano-cli*.deb

  audit:
    name: security audit and license check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: EmbarkStudios/cargo-deny-action@v1
