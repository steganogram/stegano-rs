name: Release Binary Assets
on:
  release:
    types:
      - published
jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            cross: true
            binName: stegano
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            cross: true
            binName: stegano
          - target: x86_64-apple-darwin
            os: macos-latest
            cross: false
            binName: stegano
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            cross: false
            binName: stegano.exe
          - target: x86_64-pc-windows-gnu
            os: windows-latest
            cross: false
            binName: stegano.exe
    steps:
      - uses: actions/checkout@v3
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - uses: Swatinem/rust-cache@v2
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          use-cross: ${{ matrix.cross }}
          args: --release --target=${{ matrix.target }}
      - name: Smoke Test
        uses: actions-rs/cargo@v1
        with:
          command: run
          use-cross: ${{ matrix.cross }}
          args: --release --target=${{ matrix.target }} -- --help
      - name: Create Archive
        id: archive
        shell: bash
        env:
          TARGET: ${{ matrix.target }}
          TAG: ${{ github.event.release.tag_name }}
        run: |
          filename="stegano-$TAG-$TARGET.tar.gz"
          tar -czvf "$filename" README.md LICENSE -C "target/$TARGET/release" "${{ matrix.binName }}"
          echo "::set-output name=filename::$filename"
      - name: Upload Archive
        uses: ncipollo/release-action@v1.8.7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          artifactErrorsFailBuild: true
          artifacts: ${{ steps.archive.outputs.filename }}
          artifactContentType: application/octet-stream
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          omitPrereleaseDuringUpdate: true
